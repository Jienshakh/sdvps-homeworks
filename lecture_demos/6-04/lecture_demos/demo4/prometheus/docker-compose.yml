version: '3.8'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  odinaevdd-my-netology-hw:
    driver: bridge
    ipam:
      config:
        - subnet: "10.5.0.0/16"

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: odinaevdd-netology-prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      # - cadvisor:cadvisor
      # - alertmanager:alertmanager
      - pushgateway:pushgateway
    depends_on:
      # - cadvisor 
      - pushgateway 
    networks:
      - odinaevdd-my-netology-hw
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  # alertmanager:
  #   image: prom/alertmanager
  #   container_name: odinaevdd-netology-alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./alertmanager/:/etc/alertmanager/
  #   networks:
  #     - odinaevdd-my-netology-hw
  #   restart: always
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  # node-exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: odinaevdd-netology-node-exporter
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro,rslave
  #     - /:/host:ro,rslave   # Ensure using 'rslave' for /host mount
  #   command: 
  #     - '--path.rootfs=/host'
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - --collector.filesystem.ignored-mount-points
  #     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - odinaevdd-my-netology-hw
  #   restart: always
  #   deploy:
  #     mode: global



  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor
  #   container_name: odinaevdd-netology-cadvisor
  #   volumes:
  #     - /:/rootfs:ro,rslave
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro,rslave
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - odinaevdd-my-netology-hw
  #   restart: always
  #   deploy:
  #     mode: global


  pushgateway:
    image: prom/pushgateway
    container_name: odinaevdd-netology-pushgateway
    restart: always
    expose:
      - 9091
    ports:
      - "9091:9091"
    networks:
      - odinaevdd-my-netology-hw

  grafana:
    image: grafana/grafana
    container_name: odinaevdd-netology-grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 80:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - odinaevdd-my-netology-hw
    restart: always
